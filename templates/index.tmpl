<!doctype html>
<html lang="en">
<head>
    <title>Index</title>
    ${template "basic"}
</head>
<body ng-controller="svnManagerCtrl" class="index">
    <div class="container-fluid">
        ${template "header"}
        <div class="version-control-bar">
            <div class="page-controls">
                <button class="btn btn-sm btn-default" group-add><span class="glyphicon glyphicon-plus"></span> Add Group
                </button>
                <button class="btn btn-sm btn-primary" svn-update><span class="glyphicon glyphicon-arrow-down"></span> Update
                </button>
                <button class="btn btn-sm btn-success" svn-deploy><span class="glyphicon glyphicon-transfer"></span> Deplpy
                </button>
                <div class="btn-group" svn-revert>
                    <button class="btn btn-sm btn-warning">
                        <span class="fa fa-history"></span> Revert <span class="caret"></span>
                    </button>
                </div>
            </div>
            <div id="version" class="version">
                <p class="number">Current Version: {{ version.Version }}</p>
                <p class="time">Update Time: {{ formatTime(version.Time) }}</p>
            </div>
        </div>

        <div class="upfile-list">
            <ul>
                <li ng-repeat="item in upFileList">
                    <span ng-bind-html="ACTION[item.Action]" class="action" ng-class="ACTION[item.Action].toLowerCase()"></span>
                    <span ng-bind-html="item.Path" class="path"></span>
                </li>
            </ul>
        </div>

        <ul class="group-list" id="GroupList">
            <li ng-repeat="group in groupList" data-id="{{group.id}}" class="group" ng-class="{ hidden: !group.Clients || !group.Clients.length}">
                <h3>{{group.Name}}</h3>
                <p class="desc">{{group.Desc}}</p>
                <div class="host-list">
                    <div ng-repeat="host in group.Clients" data-id="{{host.Id}}" ng-class="{ 'online': host.Status == STATUS.Alive }" class="host">
                        <div class="pie">
                            <div class="t"></div>
                            <div class="b"></div>
                        </div>
                        <div class="content">
                            <h5>{{host.Name}}</h5>
                            <p class="ip">{{host.Ip}}:{{host.Port}}</p>
                            <p class="internal">{{host.Internal}}</p>
                        </div>
                        <div class="control">
                            <span><i class="fa fa-map-marker" host-move></i></span>
                            <span><i class="fa fa-ellipsis-h" host-edit></i></span>
                        </div>
                    </div>
                    <div class="host add-host" host-add>
                        <i class="fa fa-plus-circle"></i>
                    </div>
                </div>
            </li>
        </ul>
    </div>
    <script>
        _inlineRun(function(){
            require(["controller/indexCtrl"])
        })
    </script>
    ${template "import"}
</body>
</html>

